// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionMicroservice.DBContexts;

namespace TransactionMicroservice.Migrations
{
    [DbContext(typeof(TransactionsHistoryContext))]
    [Migration("20210928095957_initialTransact")]
    partial class initialTransact
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TransactionMicroservice.Models.Counterparties", b =>
                {
                    b.Property<int>("Counterparty_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Counterparty_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Counterparty_ID");

                    b.ToTable("Counterparties");
                });

            modelBuilder.Entity("TransactionMicroservice.Models.FinancialTransactions", b =>
                {
                    b.Property<int>("Transaction_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Account_ID")
                        .HasColumnType("int");

                    b.Property<float>("Amount_of_Transaction")
                        .HasColumnType("real");

                    b.Property<int>("Counterparty_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_of_Transaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Payment_Method_Code")
                        .HasColumnType("int");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<int>("Transaction_type_code")
                        .HasColumnType("int");

                    b.Property<int>("transaction_status_code")
                        .HasColumnType("int");

                    b.HasKey("Transaction_ID");

                    b.ToTable("financialTransactions");
                });

            modelBuilder.Entity("TransactionMicroservice.Models.RefPaymentMethods", b =>
                {
                    b.Property<int>("Payment_Method_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Payment_Method_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Payment_Method_Code");

                    b.ToTable("RefPaymentMethod");
                });

            modelBuilder.Entity("TransactionMicroservice.Models.RefTransactionStatus", b =>
                {
                    b.Property<int>("transaction_status_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("transaction_status_description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transaction_status_code");

                    b.ToTable("RefTransactionStatuse");
                });

            modelBuilder.Entity("TransactionMicroservice.Models.RefTransactionTypes", b =>
                {
                    b.Property<int>("Transaction_type_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Transaction_type_description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Transaction_type_code");

                    b.ToTable("RefTransactionType");
                });

            modelBuilder.Entity("TransactionMicroservice.Models.Services", b =>
                {
                    b.Property<int>("Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_Service_Provided")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other_Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Service_ID");

                    b.ToTable("services");
                });
#pragma warning restore 612, 618
        }
    }
}
